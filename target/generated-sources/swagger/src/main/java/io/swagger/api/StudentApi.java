/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.School;
import io.swagger.model.Student;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-07-09T13:47:33.617+02:00[Europe/Berlin]")

@Api(value = "student", description = "the student API")
public interface StudentApi {

    Logger log = LoggerFactory.getLogger(StudentApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Add a new student to the store", nickname = "addStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/student",
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> addStudent(@ApiParam(value = "Student object that needs to be added to the store" ,required=true )  @Valid @RequestBody Student body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Deletes a student", nickname = "deleteStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Student not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/student/{studentId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteStudent(@ApiParam(value = "Student id to delete",required=true) @PathVariable("studentId") Integer studentId,@ApiParam(value = "" ) @RequestHeader(value="api_key", required=false) String apiKey) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get all student", nickname = "getAllStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/student",
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<Void> getAllStudent(@ApiParam(value = "Student list" ,required=true )  @Valid @RequestBody Student body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Find student by ID", nickname = "getSchoolById", notes = "Returns a single school", response = School.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = School.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "School not found") })
    @RequestMapping(value = "/student/{studentId}/school/{schoolId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<School> getSchoolById(@ApiParam(value = "ID of student to return",required=true) @PathVariable("schoolId") Integer schoolId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Find student by ID", nickname = "getStudentById", notes = "Returns a single student", response = Student.class, tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Student.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Student not found") })
    @RequestMapping(value = "/student/{studentId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Student> getStudentById(@ApiParam(value = "ID of student to return",required=true) @PathVariable("studentId") Integer studentId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update an existing student", nickname = "updateOneStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Student not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/student/{studentId}",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> updateOneStudent(@ApiParam(value = "ID of student that needs to be updated",required=true) @PathVariable("studentId") Integer studentId,@ApiParam(value = "Student object that needs to be added to the store"  )  @Valid @RequestBody Student body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update an existing student", nickname = "updateStudent", notes = "", tags={ "student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Student not found"),
        @ApiResponse(code = 405, message = "Validation exception") })
    @RequestMapping(value = "/student",
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    default ResponseEntity<Void> updateStudent(@ApiParam(value = "Student object that needs to be added to the store" ,required=true )  @Valid @RequestBody Student body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default StudentApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
